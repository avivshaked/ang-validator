!function(){"use strict";angular.module("ang-validator",[])}(),function(){"use strict";angular.module("ang-validator").run(["$validator","$validatorBuilder","directiveNormalizer",function(i,r,t){function a(){var r=["equals","contains","matches","isEmail","isURL","isFQDN","isIP","isAlpha","isNumeric","isAlphanumeric","isBase64","isHexadecimal","isHexColor","isLowercase","isUppercase","isInt","isFloat","isDivisibleBy","isNull","isLength","isByteLength","isUUID","isDate","isAfter","isBefore","isCreditCard","isISIN","isISBN","isMobilePhone","isJSON","isMultibyte","isAscii","isFullWidth","isHalfWidth","isVariableWidth","isSurrogatePair","isMongoId","isCurrency"];return r.map(function(r){return{directiveName:t.convertMethodNameToDirectiveName(r,"ngv"),validatorName:t.convertMethodNameToDirectiveName(r),validator:i[r]}})}r.buildValidators(a()),r.buildValidator({directiveName:"ngvIsIn",validatorName:"isIn",validator:function(){var r=Array.prototype.slice.call(arguments),t=r.shift();return i.isIn(t,r)}})}])}(),function(){"use strict";function i(){function i(){if(!window.validator)throw new ReferenceError(r+'No instance of validator object found. Please make sure you have referenced the file. (<script type="text/javascript" src="[path to component/]validator.min.js"></script>)');if(!(window.validator.version&&window.validator.extend&&window.validator.isHexColor))throw new TypeError(r+'"validator" instance found is not chriso\'s validator.js object. Please make sure to load the correct validator. https://github.com/chriso/validator.js');var i=window.validator.version.split(".").map(function(i){return parseInt(i)});if(3!==i[0]||i[1]<38)throw new RangeError(r+'"validator" instance found is not the required version. Required 3, sub version 38 and up.')}function t(){i()}return t(),validator}var r="ang-validator: factory-init: $validator: ";angular.module("ang-validator").factory("$validator",[i]).factory("$ValidatorConstructor",function(){return i})}(),function(){"use strict";function i(){function i(i,t){var a=r+"convertMethodNameToDirectiveName: ";if(angular.isString(t)||(t=""),angular.isUndefined(i))throw new ReferenceError(a+"methodName argument must be provided");if(!angular.isString(i))throw new TypeError(a+"methodName argument must be a string");if(""===i)throw new RangeError(a+"methodName argument must not be an empty string");var e,n=i.split(""),o=[],s=!0;for(o[0]=t?n[0].toUpperCase():n[0].toLowerCase(),e=1;e<n.length;e+=1)/[a-zA-Z]/.test(n[e])&&n[e]===n[e].toUpperCase()?s?o.push(e+1<n.length&&/[a-zA-Z]/.test(n[e+1])&&n[e+1]===n[e+1].toLowerCase()?n[e]:n[e].toLowerCase()):(o.push(n[e]),s=!0):(o.push(n[e]),s=!1);return t+o.join("")}function t(i){var t=r+"fromCamelCase: ";if(angular.isUndefined(i))throw new ReferenceError(t+"str argument must be provided");if(!angular.isString(i))throw new TypeError(t+"str argument must be a string");if(""===i)throw new RangeError(t+"str argument must not be an empty string");var a,e=i.split(""),n=[];for(n[0]=e[0].toLowerCase(),a=1;a<e.length;a+=1)/[a-zA-Z]/.test(e[a])&&e[a]===e[a].toUpperCase()?(n.push("-"),n.push(e[a].toLowerCase())):n.push(e[a]);return n.join("")}return{convertMethodNameToDirectiveName:i,fromCamelCase:t}}var r="ang-validator: directiveNormalizer: ";angular.module("ang-validator").factory("directiveNormalizer",[i])}(),function(){"use strict";function i(i){function t(t){function a(){}function e(i){var t=r+"_validateBuildConfig: oConfig";this.internalValidation.validateObject(i,t),this.internalValidation.validateStringProperty(i,"directiveName",t),this.internalValidation.validateStringProperty(i,"validatorName",t),this.internalValidation.validateFunctionProperty(i,"validator",t)}function n(i){var r=this;return{restrict:"A",require:"ngModel",link:r._validatorLink.bind(r,i)}}function o(i,r,t,a,e){function n(t){if(t||a.ngvRequired){var e=r.$eval(a[i.directiveName]);if(angular.isArray(e)){var n=[];return n.push(t),n=n.concat(e),i.validator.apply(this,n)}return i.validator(t,e)}return!0}e.$validators[i.validatorName]=n}function s(i){var r=this;r._validateBuildConfig(i),r.$compileProvider.directive(i.directiveName,r._validatorDirective.bind(r,i))}function l(i){var t=this,a=r+"buildValidators: arrConfig";if(t.internalValidation.validateObject(i,a),!angular.isArray(i))throw new TypeError(a+" should be an array");i.forEach(function(i){t.buildValidator(i)})}return a.prototype={internalValidation:t,$compileProvider:i,_validateBuildConfig:e,_validatorDirective:n,_validatorLink:o,buildValidator:s,buildValidators:l},new a}this.$get=["internalValidation",t]}var r="ang-validator: $validatorBuilder: ";angular.module("ang-validator").provider("$validatorBuilder",["$compileProvider",i])}(),function(){"use strict";function i(){}function r(i,r,t){if(t=!!t,!i&&!t)throw new ReferenceError(r+" must be provided.")}function t(i,r,t,a){if(a=!!a,angular.isUndefined(i[r])&&!a)throw new ReferenceError(t+" must have a "+r+" property.")}function a(i,r,t,a){if(!angular.isString(i[r]))throw new TypeError(t+r+" property must be a string.");if(""===i[r]&&!a)throw new RangeError(t+r+" property must not be an empty string.")}function e(i,r,t){if(!angular.isFunction(i[r]))throw new TypeError(t+r+" property must be a function.")}function n(i,r,t,a,e){a=!!a,e=!!e,this.validateProperty(i,r,t,a),i[r]&&this.validateString(i,r,t+"'s ",e)}function o(i,r,t,a){a=!!a,this.validateProperty(i,r,t,a),i[r]&&this.validateFunction(i,r,t+"'s ")}angular.module("ang-validator").service("internalValidation",[i]),i.prototype={validateObject:r,validateProperty:t,validateString:a,validateFunction:e,validateStringProperty:n,validateFunctionProperty:o}}();