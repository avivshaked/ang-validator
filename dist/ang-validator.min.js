!function(){"use strict";angular.module("ang-validator",[])}(),function(){"use strict";function i(){function i(){if(!window.validator)throw new ReferenceError(t+'No instance of validator object found. Please make sure you have referenced the file. (<script type="text/javascript" src="[path to component/]validator.min.js"></script>)');if(!(window.validator.version&&window.validator.extend&&window.validator.isHexColor))throw new TypeError(t+'"validator" instance found is not chriso\'s validator.js object. Please make sure to load the correct validator. https://github.com/chriso/validator.js');var i=window.validator.version.split(".").map(function(i){return parseInt(i)});if(3!==i[0]||i[1]<38)throw new RangeError(t+'"validator" instance found is not the required version. Required 3, sub version 38 and up.')}function r(){i()}return r(),validator}var t="ang-validator: factory-init: $validator: ";angular.module("ang-validator").factory("$validator",[i])}(),function(){"use strict";function i(i){function r(r){function a(){}function e(i){var r=t+"_validateBuildConfig: oConfig";this.internalValidation.validateObject(i,r),this.internalValidation.validateStringProperty(i,"directiveName",r),this.internalValidation.validateStringProperty(i,"validatorName",r),this.internalValidation.validateFunctionProperty(i,"validator",r)}function n(i){var t=this;return{restrict:"A",require:"ngModel",link:t._validatorLink.bind(t,i)}}function o(i,t,r,a,e){function n(e){if(r[0].required||e){var n=t.$eval(a[i.directiveName]);return i.validator(e,n)}return!0}e.$validators[i.validatorName]=n}function d(i){var t=this;t._validateBuildConfig(i),t.$compileProvider.directive(i.directiveName,t._validatorDirective.bind(t,i))}return a.prototype={internalValidation:r,$compileProvider:i,_validateBuildConfig:e,_validatorDirective:n,_validatorLink:o,buildValidator:d},new a}this.$get=["internalValidation",r]}var t="ang-validator: $validatorBuilder: ";angular.module("ang-validator").provider("$validatorBuilder",["$compileProvider",i])}(),function(){"use strict";function i(){}function t(i,t,r){if(r=!!r,!i&&!r)throw new ReferenceError(t+" must be provided.")}function r(i,t,r,a){if(a=!!a,angular.isUndefined(i[t])&&!a)throw new ReferenceError(r+" must have a "+t+" property.")}function a(i,t,r,a){if(!angular.isString(i[t]))throw new TypeError(r+t+" property must be a string.");if(""===i[t]&&!a)throw new RangeError(r+t+" property must not be an empty string.")}function e(i,t,r){if(!angular.isFunction(i[t]))throw new TypeError(r+t+" property must be a function.")}function n(i,t,r,a,e){a=!!a,e=!!e,this.validateProperty(i,t,r,a),i[t]&&this.validateString(i,t,r+"'s ",e)}function o(i,t,r,a){a=!!a,this.validateProperty(i,t,r,a),i[t]&&this.validateFunction(i,t,r+"'s ")}angular.module("ang-validator").service("internalValidation",[i]),i.prototype={validateObject:t,validateProperty:r,validateString:a,validateFunction:e,validateStringProperty:n,validateFunctionProperty:o}}();